{"version":3,"sources":["components/CommentItem/index.js","components/Comments/index.js","App.js","index.js"],"names":["CommentItem","props","commentDetails","id","name","comment","isLiked","initialClassName","date","initial","toUpperCase","likeTextClassName","likeImageUrl","postedTime","formatDistanceToNow","className","src","alt","type","onClick","toggleIsLiked","deleteComment","initialContainerBackgroundClassNames","Comments","state","nameInput","commentInput","commentsList","commentId","setState","filter","prevState","map","eachComment","renderCommentsList","onAddComment","event","preventDefault","initialBackgroundColorClassName","Math","ceil","random","length","newComment","v4","Date","onChangeCommentInput","target","value","onChangeNameInput","this","onSubmit","placeholder","onChange","rows","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c135af74.chunk.js","sourcesContent":["import {formatDistanceToNow} from 'date-fns'\n\nimport './index.css'\n\nconst CommentItem = props => {\n  const {commentDetails} = props\n  const {id, name, comment, isLiked, initialClassName, date} = commentDetails\n  const initial = name ? name[0].toUpperCase() : ''\n  const likeTextClassName = isLiked ? 'button active' : 'button'\n  const likeImageUrl = isLiked\n    ? 'https://assets.ccbp.in/frontend/react-js/comments-app/liked-img.png'\n    : 'https://assets.ccbp.in/frontend/react-js/comments-app/like-img.png'\n  const postedTime = formatDistanceToNow(date)\n\n  const onClickLike = () => {\n    const {toggleIsLiked} = props\n    toggleIsLiked(id)\n  }\n\n  const onDeleteComment = () => {\n    const {deleteComment} = props\n    deleteComment(id)\n  }\n\n  return (\n    <li className=\"comment-item\">\n      <div className=\"comment-container\">\n        <div className={initialClassName}>\n          <p className=\"initial\">{initial}</p>\n        </div>\n        <div>\n          <div className=\"username-time-container\">\n            <p className=\"username\">{name}</p>\n            <p className=\"time\">{postedTime} ago</p>\n          </div>\n          <p className=\"comment\">{comment}</p>\n        </div>\n      </div>\n      <div className=\"buttons-container\">\n        <div className=\"like-container\">\n          <img src={likeImageUrl} alt=\"like\" className=\"like-image\" />\n          <button\n            className={likeTextClassName}\n            type=\"button\"\n            onClick={onClickLike}\n          >\n            Like\n          </button>\n        </div>\n        <button\n          className=\"button\"\n          type=\"button\"\n          onClick={onDeleteComment}\n          data-testid=\"delete\"\n        >\n          <img\n            className=\"delete\"\n            src=\"https://assets.ccbp.in/frontend/react-js/comments-app/delete-img.png\"\n            alt=\"delete\"\n          />\n        </button>\n      </div>\n      <hr className=\"comment-line\" />\n    </li>\n  )\n}\n\nexport default CommentItem\n","import {Component} from 'react'\nimport {v4} from 'uuid'\n\nimport CommentItem from '../CommentItem'\n\nimport './index.css'\n\nconst initialContainerBackgroundClassNames = [\n  'amber',\n  'blue',\n  'orange',\n  'emerald',\n  'teal',\n  'red',\n  'light-blue',\n]\n\nclass Comments extends Component {\n  state = {\n    nameInput: '',\n    commentInput: '',\n    commentsList: [],\n  }\n\n  deleteComment = commentId => {\n    const {commentsList} = this.state\n\n    this.setState({\n      commentsList: commentsList.filter(comment => comment.id !== commentId),\n    })\n  }\n\n  toggleIsLiked = id => {\n    this.setState(prevState => ({\n      commentsList: prevState.commentsList.map(eachComment => {\n        if (id === eachComment.id) {\n          return {...eachComment, isLiked: !eachComment.isLiked}\n        }\n        return eachComment\n      }),\n    }))\n  }\n\n  renderCommentsList = () => {\n    const {commentsList} = this.state\n\n    return commentsList.map(eachComment => (\n      <CommentItem\n        key={eachComment.id}\n        commentDetails={eachComment}\n        toggleIsLiked={this.toggleIsLiked}\n        deleteComment={this.deleteComment}\n      />\n    ))\n  }\n\n  onAddComment = event => {\n    event.preventDefault()\n    const {nameInput, commentInput} = this.state\n    const initialBackgroundColorClassName = `initial-container ${\n      initialContainerBackgroundClassNames[\n        Math.ceil(\n          Math.random() * initialContainerBackgroundClassNames.length - 1,\n        )\n      ]\n    }`\n    const newComment = {\n      id: v4(),\n      name: nameInput,\n      comment: commentInput,\n      date: new Date(),\n      isLiked: false,\n      initialClassName: initialBackgroundColorClassName,\n    }\n\n    this.setState(prevState => ({\n      commentsList: [...prevState.commentsList, newComment],\n      nameInput: '',\n      commentInput: '',\n    }))\n  }\n\n  onChangeCommentInput = event => {\n    this.setState({\n      commentInput: event.target.value,\n    })\n  }\n\n  onChangeNameInput = event => {\n    this.setState({\n      nameInput: event.target.value,\n    })\n  }\n\n  render() {\n    const {nameInput, commentInput, commentsList} = this.state\n\n    return (\n      <div className=\"app-container\">\n        <div className=\"comments-container\">\n          <h1 className=\"app-heading\">Comments</h1>\n          <div className=\"comments-inputs\">\n            <form className=\"form\" onSubmit={this.onAddComment}>\n              <p className=\"form-description\">\n                Say something about 4.0 Technologies\n              </p>\n              <input\n                type=\"text\"\n                className=\"name-input\"\n                placeholder=\"Your Name\"\n                value={nameInput}\n                onChange={this.onChangeNameInput}\n              />\n              <textarea\n                placeholder=\"Your Comment\"\n                className=\"comment-input\"\n                value={commentInput}\n                onChange={this.onChangeCommentInput}\n                rows=\"6\"\n              />\n              <button type=\"submit\" className=\"add-button\">\n                Add Comment\n              </button>\n            </form>\n            <img\n              className=\"image\"\n              src=\"https://assets.ccbp.in/frontend/react-js/comments-app/comments-img.png\"\n              alt=\"comments\"\n            />\n          </div>\n          <hr className=\"line\" />\n          <p className=\"heading\">\n            <span className=\"comments-count\">{commentsList.length}</span>\n            Comments\n          </p>\n          <ul className=\"comments-list\">{this.renderCommentsList()}</ul>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Comments\n","import Comments from './components/Comments'\n\nimport './App.css'\n\nconst App = () => <Comments />\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}